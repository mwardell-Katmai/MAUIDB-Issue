// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GlobalDb.Models;

public partial class GlobalDbContext : DbContext
{
    public GlobalDbContext(DbContextOptions<GlobalDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AppConfiguration> AppConfigurations { get; set; }

    public virtual DbSet<CommandCoin> CommandCoins { get; set; }

    public virtual DbSet<FormInstance> FormInstances { get; set; }

    public virtual DbSet<FormValue> FormValues { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AppConfiguration>(entity =>
        {
            entity.ToTable("AppConfiguration");

            entity.Property(e => e.AppConfigurationId).HasColumnType("varchar(36)");
            entity.Property(e => e.AppName).HasColumnType("varchar");
            entity.Property(e => e.BucketName).HasColumnType("varchar");
            entity.Property(e => e.Comments).HasColumnType("varchar");
            entity.Property(e => e.ConfigurationIconPath).HasColumnType("varchar");
            entity.Property(e => e.CurrentlyInstalledVersion).HasColumnType("varchar");
            entity.Property(e => e.CurrentlyInstalledVersionLabel).HasColumnType("varchar");
            entity.Property(e => e.Etag)
                .HasColumnType("varchar")
                .HasColumnName("ETag");
            entity.Property(e => e.FileKey).HasColumnType("varchar");
            entity.Property(e => e.FileName).HasColumnType("varchar");
            entity.Property(e => e.LastModified).HasColumnType("bigint");
            entity.Property(e => e.Size).HasColumnName("size");
            entity.Property(e => e.Title).HasColumnType("varchar");
            entity.Property(e => e.Url).HasColumnType("varchar");
            entity.Property(e => e.Version).HasColumnType("varchar");
        });

        modelBuilder.Entity<CommandCoin>(entity =>
        {
            entity.HasKey(e => e.CoinId);

            entity.ToTable("CommandCoin");

            entity.Property(e => e.CoinId).HasColumnType("varchar(36)");
            entity.Property(e => e.CoinDate).HasColumnType("varchar");
            entity.Property(e => e.CoinJustification).HasColumnType("varchar");
            entity.Property(e => e.CoinOccasion).HasColumnType("varchar");
            entity.Property(e => e.CoinRecipient).HasColumnType("varchar");
            entity.Property(e => e.CoinType).HasColumnType("varchar");
        });

        modelBuilder.Entity<FormInstance>(entity =>
        {
            entity.ToTable("FormInstance");

            entity.Property(e => e.FormInstanceId).HasColumnType("varchar(36)");
            entity.Property(e => e.DateCreated).HasColumnType("bigint");
            entity.Property(e => e.FormId).HasColumnType("varchar(36)");
            entity.Property(e => e.FormInstanceName).HasColumnType("varchar");
        });

        modelBuilder.Entity<FormValue>(entity =>
        {
            entity.ToTable("FormValue");

            entity.Property(e => e.FormValueId).HasColumnType("varchar(36)");
            entity.Property(e => e.FormInstanceId).HasColumnType("varchar(36)");
            entity.Property(e => e.QuestionId).HasColumnType("varchar");
            entity.Property(e => e.Type).HasColumnType("varchar");
            entity.Property(e => e.Value).HasColumnType("varchar");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}